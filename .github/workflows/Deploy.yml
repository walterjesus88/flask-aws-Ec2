name: Deploy to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Deploy to EC2
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        EC2_HOST: ${{ secrets.EC2_HOST }}
        EC2_USER: ${{ secrets.EC2_USER }}
      run: |
        # Escribe la clave privada en un archivo temporal
        echo "${{ secrets.EC2_PRIVATE_KEY }}" > /tmp/ec2_key.pem
        chmod 600 /tmp/ec2_key.pem

        # Verifica si el archivo temporal existe y tiene el contenido esperado
        ls -l /tmp/ec2_key.pem
        cat /tmp/ec2_key.pem

        # Upload code to EC2 instance
        scp -i /tmp/ec2_key.pem -o StrictHostKeyChecking=no -r * $EC2_USER@$EC2_HOST:/home/ubuntu/flask-aws-Ec2

        # SSH into EC2 and restart the application
        ssh -i /tmp/ec2_key.pem -o StrictHostKeyChecking=no $EC2_USER@$EC2_HOST << 'EOF'
          cd /home/ubuntu/flask-aws-Ec2
          source myenv/bin/activate
          git pull origin main
          sudo systemctl restart gunicorn
          sudo systemctl restart nginx
        EOF
      shell: /usr/bin/bash -e {0}
      env:
        pythonLocation: /opt/hostedtoolcache/Python/3.12.5/x64
        PKG_CONFIG_PATH: /opt/hostedtoolcache/Python/3.12.5/x64/lib/pkgconfig
        Python_ROOT_DIR: /opt/hostedtoolcache/Python/3.12.5/x64
        Python2_ROOT_DIR: /opt/hostedtoolcache/Python/3.12.5/x64
        Python3_ROOT_DIR: /opt/hostedtoolcache/Python/3.12.5/x64
        LD_LIBRARY_PATH: /opt/hostedtoolcache/Python/3.12.5/x64/lib
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        EC2_HOST: ${{ secrets.EC2_HOST }}
        EC2_USER: ${{ secrets.EC2_USER }}
